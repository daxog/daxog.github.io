<button id="themeToggleButton" class="p-2 rounded-md hover:bg-gray-200 dark:hover:bg-neutral-800 transition-colors duration-300" 
  aria-label="Toggle dark mode">
  <svg id="themeIconLight" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
    <path stroke-linecap="round" stroke-linejoin="round" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
  </svg>
  <svg id="themeIconDark" xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
    <path stroke-linecap="round" stroke-linejoin="round" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
  </svg>
</button>

<script is:inline>
  const themeToggleButton = document.getElementById('themeToggleButton');
  const themeIconLight = document.getElementById('themeIconLight');
  const themeIconDark = document.getElementById('themeIconDark');
  let isDarkMode;

  function applyTheme(theme) {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
      themeIconLight.classList.add('hidden');
      themeIconDark.classList.remove('hidden');
      isDarkMode = true;
    } else {
      document.documentElement.classList.remove('dark');
      themeIconLight.classList.remove('hidden');
      themeIconDark.classList.add('hidden');
      isDarkMode = false;
    }
  }

  function toggleTheme() {
    isDarkMode = !isDarkMode;
    const newTheme = isDarkMode ? 'dark' : 'light';
    localStorage.setItem('theme', newTheme);
    applyTheme(newTheme);
  }

  themeToggleButton.addEventListener('click', toggleTheme);

  const initialTheme = localStorage.getItem('theme') || (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  applyTheme(initialTheme);
</script>